datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model AuthUser {
    id           Int            @id @default(autoincrement())
    username     String         @unique
    password     String
    createdAt    DateTime       @default(now())
    updatedAt    DateTime       @updatedAt
    projects     Project[]
    UserSessions UserSessions[]
}

model UserSessions {
    id        Int      @id @default(autoincrement())
    userId    Int
    sessionId String   @unique
    createdAt DateTime @default(now())
    user      AuthUser @relation(fields: [userId], references: [id])
}

model Project {
    id                   Int                   @id @default(autoincrement())
    name                 String
    description          String?
    createdAt            DateTime              @default(now())
    updatedAt            DateTime              @updatedAt
    ownerId              Int
    owner                AuthUser              @relation(fields: [ownerId], references: [id])
    ProjectConfiguration ProjectConfiguration?
    Event                Event[]
}

model ProjectConfiguration {
    id        Int      @id @default(autoincrement())
    projectId Int      @unique
    apiKey    String   @unique
    secret    String   @unique
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    project   Project  @relation(fields: [projectId], references: [id])
}

model UserEvent {
    id        String   @id
    createdAt DateTime @default(now())
    firstSeen DateTime @default(now())
    Event     Event[]
}

model Event {
    id           Int       @id @default(autoincrement())
    eventType    String
    userId       String
    UserEvent    UserEvent @relation(fields: [userId], references: [id])
    projectId    Int
    createdAt    DateTime  @default(now())
    customFields Json?
    Project      Project   @relation(fields: [projectId], references: [id])
}
